import express from 'express';
import cors from 'cors';
import path from 'path';
import { fileURLToPath } from 'url';

import { initDb } from './models/index.js'; // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —á–µ—Ä–µ–∑ Sequelize
import { registerValidation } from './routes/auth.js';
import * as UserController from './controllers/userController.js';
import checkAuth from './utils/checkAuth.js';

import activityRoutes from "./routes/activity.js";
import authRoutes from "./routes/auth.js";
import completeProfileRoutes from './routes/completeProfile.js';

const app = express();

app.use(cors());
app.use(express.json());

app.use("/activity", activityRoutes);
app.use("/auth", authRoutes);
app.use("/auth", completeProfileRoutes);

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä—É—á–∫–∏
app.post("/auth/login", UserController.login);
app.post("/auth/register", registerValidation, UserController.register);
app.get("/auth/me", checkAuth, UserController.getMe);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ React (build)
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const clientBuildPath = path.resolve(__dirname, 'client', 'build');

app.use(express.static(clientBuildPath));

// –û—Ç–¥–∞—á–∞ index.html –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (SPA)
app.get('*', (req, res) => {
  res.sendFile(path.join(clientBuildPath, 'index.html'));
});

const PORT = 4444;

app.listen(PORT, async () => {
  try {
    await initDb(); // –∑–∞–ø—É—Å–∫ Sequelize –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
    console.log('‚úÖ PostgreSQL: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:${PORT}`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ë–î:', err);
  }
});
